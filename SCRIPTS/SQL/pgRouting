-- OBSERVANDO A TABELA DOS GRAFOS:
SELECT * FROM vias_grafos;

-- CRIANDO UMA NOVA TABELA SIMILAR AO 'vias_grafos' CHAMADA 'rede_vicosa':
SELECT * INTO rede_vicosa FROM vias_grafos ORDER BY id;

-- CRIANDO OS CAMPOS PARA OS VÉRTICES DE FIM E INICIO DO GRAFO:
ALTER TABLE rede_vicosa
ADD source INT4,
ADD target INT4,
ADD cost REAL,
ADD reverse_cost REAL;

-- RENOMEANDO O CAMPO 'geom' PARA 'the_geom':
ALTER TABLE rede_vicosa
RENAME COLUMN geom TO the_geom;

-- REDEFININDO OS DADOS DE DIREÇÃO DA VIA PARA 'YES' OU 'NO':
-- VIAS COM MÃO ÚNICA:
UPDATE rede_vicosa SET oneway = 'YES' WHERE oneway = 'TF';

-- VIAS COM MÃO DUPLA:
UPDATE rede_vicosa SET oneway = 'NO' WHERE oneway = 'B';

-- DEFININDO CUSTOS 1 PARA TODOS OS VÉRTICES:
UPDATE rede_vicosa SET cost = 1, reverse_cost = 1;

-- DEFININDO O CUSTO REVERSOS = -1 PARA OS GRAFOS COM DIREÇÃO ÚNICA:
UPDATE rede_vicosa SET reverse_cost = '-1' WHERE oneway = 'YES';

-- CRIANDO A TOPOLOGIA DA REDE:
SELECT pgr_createTopology('rede_vicosa', 1);

-- CRIANDO OS VÉRTICES NO MEIO DE CADA GRAFO:
CREATE TABLE mid_points AS
SELECT id, ST_LineInterpolatePoint(ST_LineMerge(the_geom), 0.5) as geom
FROM rede_vicosa;

ALTER TABLE mid_points
ADD CONSTRAINT mid_points_pk PRIMARY KEY (id);

CREATE INDEX sidx_mid_points
 ON mid_points
 USING GIST (geom);
 
-- CONFERIR SE OS VÉRTICES SOURCE E TARGET ESTÃO DE ACORDO COM A REALIDADE PARA OS GRAFOS QUE POSSUEM APENAS UMA MÃO.
-- DE FORMA MANUAL, DEVE-SE OBSERVAR AQUELES GRAFOS QUE NECESSIATARAM DE ALTERAR O CAMPO 'source' e 'target' DURANTE A EDIÇÃO DA CAMADA 'rede_vicosa'

-- id do grafo: 1
UPDATE rede_vicosa
SET source = '51', target = '34'
WHERE id = 1;

-- id do grafo: 62
UPDATE rede_vicosa
SET source = '7', target = '55'
WHERE id = 62;

-- id do grafo: 71
UPDATE rede_vicosa
SET source = '84', target = '8'
WHERE id = 71;

-- id do grafo: 96
UPDATE rede_vicosa
SET source = '11', target = '10'
WHERE id = 96;

-- OBS: NESSA PARTE DEVE-SE IR AO QGIS E USAR A FERRAMENTA 'Connect nodes to lines' PARA DIVIDIR A REDE_EXEMPLO NOS MID_POINTS.
--PRIMEIRO, FAÇA UMA CÓPIA DA CAMADA 'rede_vicosa' NOMEANDO-A COMO 'rede_vicosa_mp_prov', USE A FERRAMENTA MENCIONADA E DEPOIS SUBA A NOVA REDE PARA O BANCO DE DADOS.
-- OBS: AO SUBIR A REDE DIVIDIDA PARA O BANCO DE DADOS, DEVE-SE COLOCAR OS NOVOS ID'S COM O NOME DE id0.

-- REMOVENDO DA CAMADA rede_vicosa_mp AQUELAS GEOMETRIAS NÃO UTEIS PARA A ATUAL ANÁLISE

CREATE TABLE rede_vicosa_mp AS
SELECT rvmpp.id, rvmpp.comp_via, rvmpp.nome_rua, rvmpp.comp_nome_rua, rvmpp.tipo_pm, rvmpp.comp_tipo_pm, rvmpp.oneway, rvmpp.source, rvmpp.target, rvmpp.cost, rvmpp.reverse_cost, ST_Difference(rvmpp.geom, ptos.geom) as geom 
FROM (SELECT rvmpp.*
FROM rede_vicosa_mp_prov rvmpp, mid_points mp
WHERE ST_Contains(mp.geom, rvmpp.geom)) as ptos, rede_vicosa_mp_prov rvmpp
WHERE ST_Intersects(rvmpp.geom, ptos.geom);

DELETE FROM rede_vicosa_mp
WHERE ST_LENGTH(geom) = 0;

ALTER TABLE rede_vicosa_mp
ADD COLUMN id0 SERIAL PRIMARY KEY;

--DELETANDO A TABELA rede_vicosa_mp_prov, JÁ QUE A DEFINITIVA FOI CRIADA
DROP TABLE rede_vicosa_mp_prov;

-- ALTERANDO A TABELA REDE_VICOSA_MP:
ALTER TABLE rede_vicosa_mp
RENAME COLUMN id TO id_grafo;

--ALTERANDO A TABELA 'mid_points' PARA INCLUIR UMA COLUNA CHAMADA ID_GRAFO E ALTERAR O ID PARA 1000 + id DO GRAFO.
ALTER TABLE mid_points
ADD id_grafo INT4;

UPDATE mid_points
SET id_grafo = id;

UPDATE mid_points
SET id = 1000 + id;

SELECT * FROM mid_points;

--CRIANDO A TABELA rede_vicosa_mp_vertices QUE POSSUIRÁ TODOS OS VERTICES DA REDE PARA CALCULO DE ACESSIBILIDADE:
 

-- AGORA É HORA DO PYTHON ENTRAR EM AÇÃO E ORGANIZAR OS VÉRTICES FINAIS E INICIAIS DE CADA GRAFO. OS DOIS EXEMPLOS A SEGUIR SÃO MERAMENTE ILUSTRATIVOS:
-- SELECIONANDO  E O VÉRTICE INICIAL E FINAL DO GRAFO 1:
SELECT rvmp.id, rvmp.geom
FROM (SELECT ST_LineInterpolatePoints(ST_LineMerge(geom), 0) as geom
FROM rede_vicosa_mp
WHERE id0 = 2) as pto, rede_vicosa_mp_vertices rvmp
WHERE ST_Intersects(pto.geom, rvmp.geom)

SELECT rvmp.id, rvmp.geom
FROM (SELECT ST_LineInterpolatePoints(ST_LineMerge(geom), 1) as geom
FROM rede_vicosa_mp
WHERE id0 = 2) as pto, rede_vicosa_mp_vertices rvmp
WHERE ST_Intersects(pto.geom, rvmp.geom)

-- APÓS O PYTHON, DEVE-SE VERIFICAR OS VÉRTICES INICIAIS E FINAIS DOS MESMOS GRAFOS MODIFICADOS QUANDO CRIOU-SE A 'rede_vicosa'.
-- A ALTERAÇÃO É FEITA DE FORMA SIMILAR:
-- id do grafo: id_grafo = 1 e id0 = 210,209
UPDATE rede_vicosa_mp
SET source = '51', target = '1001'
WHERE id0 = 210;

------
UPDATE rede_vicosa_mp
SET source = '1001', target = '34 '
WHERE id0 = 209;

-- id do grafo: id_grafo = 62 e id0 = 217, 218
UPDATE rede_vicosa_mp
SET source = '1062', target = '55'
WHERE id0 = 217;

------
UPDATE rede_vicosa_mp
SET source = '7', target = '1062'
WHERE id0 = 218;

-- id do grafo: id_grafo = 71 e id0 = 127 e 128
UPDATE rede_vicosa_mp
SET source = '84', target = '1071'
WHERE id0 = 128;

-------
UPDATE rede_vicosa_mp
SET source = '1071', target = '8'
WHERE id0 = 127;

-- id do grafo: id_grafo = 96 e id0 = 11 e 12
UPDATE rede_vicosa_mp
SET source = '11', target = '1096'
WHERE id0 = 12;

-----
UPDATE rede_vicosa_mp
SET source = '1096', target = '10'
WHERE id0 = 11;

-- APÓS O PYTHON, RETORNA-SE AOS SEGUINTES COMANDOS:
-- RENOEMANDO ALGUMAS COLUNAS DA REDE E RECRIANDO A TOPOLOGIA DA REDE:
ALTER TABLE rede_vicosa_mp
RENAME COLUMN geom TO the_geom;

ALTER TABLE rede_vicosa_mp
RENAME COLUMN id0 TO id;

SELECT pgr_createTopology('rede_vicosa_mp', 1);

-- OBSERVANDO A TABELA 'rede_vicosa' e OS VÉRTICES DE INICIO E FIM DA REDE:

SELECT * FROM rede_vicosa;

SELECT * FROM rede_vicosa_vertices_pgr;

SELECT * FROM rede_vicosa_mp;

SELECT * FROM rede_vicosa_mp_vertices;

-- CONSULTANDO O CUSTO ENTRE OS GRAFOS (GRAFO 1 PARA O 2 POR EXEMPLO):

SELECT sum(djk.cost/2) as tot_cost
FROM pgr_dijkstra('SELECT id, source, target, cost, reverse_cost from rede_vicosa_mp', 1001, 1048, true) as djk
JOIN rede_vicosa_mp rvmp
ON djk.edge = rvmp.id;

CREATE OR REPLACE VIEW ROTAS AS
SELECT seq, node, edge, the_geom FROM pgr_dijkstra('Select id, source, target, cost, reverse_cost from rede_vicosa_mp', 1001, 1048, true) as djk
JOIN rede_vicosa_mp rvmp
ON djk.edge = rvmp.id;

-- ADICIONANDO CAMPOS NA TABELA 'rede_vicosa' OS CAMPOS PARA ADICONAR A ACESSIBILIDADE DAS VIAS:
ALTER TABLE rede_vicosa
ADD COLUMN acess_1 REAL,
ADD COLUMN acess_2 REAL,
ADD COLUMN acess_3 REAL;

